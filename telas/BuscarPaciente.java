/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fabio
 */
public class BuscarPaciente extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = new DefaultTableModel(0, 0);
    String colunas[] = new String [] {
                "ID", "Numero Caso", "Nome Completo", "CPF", "Data de Entrada", "Resultado 1ª Amotra", "Resultado 2ª Amotra", "Resultado 3ª Amotra", "Resultado 4ª Amotra", "Resultado Final Mãe", "Resultado Final RN", "Data 1ª Coleta", "Data 2ª Coleta", "Data 3ª Coleta", "Data 4ª Coleta", "Data 5ª Coleta"
    };
        
       
    private PreparedStatement preparedStatement = null;
    private ResultSet resultSet = null;
    private Statement statement = null;
    /**
     * Creates new form buscarPaciente
     */
    public BuscarPaciente() {
        initComponents();
        tbl.paintImmediately(0, 0, 200, 300);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tbl.setModel(tbl.getModel());
        jScrollPane1.setViewportView(tbl);
        if (tbl.getColumnModel().getColumnCount() > 0) {
            tbl.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            tbl.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            tbl.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            tbl.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
                    System.out.println("-------- MySQL JDBC Connection Testing ------------");

                try {
                        Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException e) {
                        System.out.println("Where is your MySQL JDBC Driver?");
                        e.printStackTrace();
                        return;
                }

                System.out.println("MySQL JDBC Driver Registered!");
                Connection connection = null;
                

                try {
                        connection = DriverManager
                        .getConnection("jdbc:mysql://localhost:3306/projetozikadb","root", "lmi56n");

                } catch (SQLException e) {
                        System.out.println("Connection Failed! Check output console");
                        e.printStackTrace();
                        return;
                }

                if (connection != null) {
                        System.out.println("You made it, take control your database now!");
                } else {
                        System.out.println("Failed to make connection!");
                }
                
                statement = connection.createStatement();
                preparedStatement = (PreparedStatement) connection.prepareStatement("SELECT * from pacientes");
                resultSet = preparedStatement.executeQuery();
                dtm.setColumnIdentifiers(colunas);
                tbl.setModel(dtm);

                while(resultSet.next()){                    
                    String id = resultSet.getString("ID_Paciente");
                    String nrCaso = resultSet.getString("NumeroCaso");
                    String nomeComp = resultSet.getString("NomeCompleto");
                    String cpf = resultSet.getString("CPF");
                    String dataEntrada = resultSet.getString("DataEntrada");
                    
                    dtm.addRow(new Object[] {id, nrCaso, nomeComp, cpf, dataEntrada});
                    
                }
    //            
    //            stmt = connection.createStatement();
    //            rs = stmt.executeQuery("INSERT INTO pacientes ");
    //
    //            // or alternatively, if you don't know ahead of time that
    //            // the query will be a SELECT...
    //
    //            if (stmt.execute("SELECT foo FROM bar")) {
    //                rs = stmt.getResultSet();
    //            }

                // Now do something with the ResultSet ....
            }catch (SQLException ex){
                // handle any errors
                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
               
            }
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
}
